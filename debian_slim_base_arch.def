Bootstrap: localimage
From: debian_slim_buster.sif

#From: debian_slim_base.sif

# using debian-slim
#Bootstrap: docker
#From: debian:buster-slim
#
# original:
#From: ubuntu:latest
#From: ubuntu:20.10

%setup
	
%post
    apt-get -y update
    #apt-get -y install fortune cowsay lolcat
    #
    apt-get -y install wget curl zip vim
    apt-get -y install cmake
    apt-get -y install autoconf
    apt-get -y install pkg-config
    #
    # NOTE: we might only need g++. We only need these for the core builds.
    apt-get -y install g++ gcc gfortran
    apt-get -y install git
    #
    # do we need blas, lapack for spack? 
    apt-get -y install libblas-dev liblapack-dev
    apt-get -y install python3 python3-dev
    #
	# download and install Spack:
    # TODO: copy this repo, to save some bandwidth? Same with Anaconda (see below)
    wget https://github.com/spack/spack/archive/refs/tags/v0.16.1.zip
    unzip v0.16.1.zip -d spack
    cd spack/spack-0.16.1
    . share/spack/setup-env.sh
    #
    # for debian:buster-slim (and similar), we need to install at least gcc@9.{something} to install gcc@10.+ optimized for zen2
    #  so for these OSs, do a preliminary spack install first.
    spack install gcc@10.2.0
    spack compiler find `spack location -i gcc@10.2.0`
    spack load gcc@10.2.0
    
    for target in zen2 skylake x86_64
    do
    	spack env create $target
    	spack env activate $target
    	#
    
		#
		#echo "Begin Spack installs:"
		spack install gcc@10.1.0 target=$target
		spack compiler find `spack location -i gcc@10.`
		spack load gcc@10.1.0
		##
		#spack install mpich@3.3.2 %gcc@10.1.0
		#spack load mpich
		##
		#spack install netcdf-fortran+mpi@4.5.3 ^netcdf-c+mpi @4.7.4 ^hdf5+fortran+mpi @1.12.0 ^mpich@3.3.2 %gcc@10.1.0
		#spack load netcdf-fortran
		#spack load netcdf-c
		#
		spack clean --all
		spack gc --yes-to-all
	done
	#
	spack env deactivate
	#spack uninstall -y gcc@10.2.0
	spack clean --all
	spack gc --yes-to-all
    ##
    # this is now  a runtime activity, after an environment is selected?
#    ln -sf `spack location -i gcc` /opt/gcc
#    #ln -sf `spack location -i mpich` /opt/mpich
#    #ln -sf `spack location -i netcdf-c` /opt/netcdf-c
#    #ln -sf `spack location -i netcdf-fortran` /opt/netcdf-fortran
#    #ln -sf `spack location -i hdf5` /opt/hdf5

%environment
    #export LC_ALL=C
	export SPACK_PATH=/spack/spack-0.16.1
	. $SPACK_PATH/share/spack/setup-env.sh
	
	#export PATH=/opt/gcc/bin:/opt/mpich/bin:/opt/netcdf-c/bin:/opt/netcdf-fortran/bin:/opt/hdf5/bin:$PATH
	#export LD_LIBRARY_PATH:/opt/gcc/lib:/opt/mpich/lib:/opt/netcdf-c/lib:/opt/netcdf-fortran/lib:/opt/hdf5/lib:$LD_LIBRARY_PATH
	#export LIBRARY_PATH=$LD_LIBRARY_PATH
	
%startscript
	

%runscript
    #fortune | cowsay | lolcat
    #echo "I am a container. My name is `hostname`".
