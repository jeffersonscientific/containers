Bootstrap: docker
From: ubuntu:20.10

%post
    apt-get -y update
    apt-get -y install fortune cowsay lolcat
    #
    apt-get -y install wget curl zip vim
    apt-get -y install cmake
    apt-get -y install autoconf
    apt-get -y install g++ gcc gfortran
    apt-get -y install git
    apt-get -y install pkg-config
    apt-get -y install libblas-dev liblapack-dev
    #apt-get -y install build-essential python-libdev
    apt-get -y install python3 python3-dev
    #
    echo "git spack..."
    #git clone https://github.com/spack/spack ~/spack
    #cd ~/spack
    #git checkout releases/v0.16.1
    #
    mkdir /app
    #chown 777 /app
    #cd /app
    #
    wget https://github.com/spack/spack/archive/refs/tags/v0.16.1.zip
    unzip v0.16.1.zip -d spack
    cd spack/spack-0.16.1
    #
    . share/spack/setup-env.sh
    #
    echo "Begin Spack installs:"
    spack install gcc@10.1.0
    spack compiler find `spack location -i gcc@10.1.0`
    spack load gcc
    #
    spack install mpich@3.3.2 %gcc@10.1.0
    spack load mpich
    #
    #spack install hdf5+fortran+mpi@1.12.0%gcc@10.1.0
    #
    # NOTE: this is netcdf and mpi *minus* mpi support
    spack install netcdf-fortran@4.5.3^netcdf-c~mpi@4.7.4^hdf5+fortran~mpi @1.12.0%gcc@10.1.0
    spack load netcdf-fortran
    spack load netcdf-c
    #
    ln -sf `spack location -i gcc` /opt/gcc
    ln -sf `spack location -i mpich` /opt/mpich
    ln -sf `spack location -i netcdf-c` /opt/netcdf-c
    ln -sf `spack location -i netcdf-fortran` /opt/netcdf-fortran
    ln -sf `spack location -i hdf5` /opt/hdf5
    #
    #git clone --recursive git@github.com:NOAA-GFDL/AM4.git
    wget https://github.com/NOAA-GFDL/AM4/archive/refs/tags/xanadu_2021.01.zip
#   unzip xanadu_2021.01.zip
#   cd AM4-xanadu_2021.01
#   #
#   cd exec
#   make clean
#   make
    
%environment
    #export LC_ALL=C
    #export PATH=/usr/games:$PATH
	export SPACK_PATH=spack/spack-0.16.1
	. $SPACK_PATH/share/spack/setup-env.sh
	#
	export PATH=/opt/gcc/bin:/opt/mpich/bin:/opt/netcdf-c/bin:/opt/netcdf-fortran/bin:/opt/hdf5/bin:$SPACK_PATH:$PATH
	export LD_LIBRARY_PATH=/opt/gcc/lib:/opt/mpich/lib:/opt/netcdf-c/lib:/opt/netcdf-fortran/lib:/opt/hdf5/lib:/opt/hdf5/include:$LD_LIBRARY_PATH
	export CPATH=/opt/gcc/include:/opt/mpich/include:/opt/netcdf-c/include:/opt/netcdf-fortran/include:/opt/hdf5/include:$CPATH
	export LIBRARY_PATH=$LD_LIBRARY_PATH
	#
	export PKG_CONFIG_PATH=/opt/mpich/lib/pkgconfig:$PKG_CONFIG_PATH
	#
	export MPI_FLAGS=" `pkg-config --cflags-only-I mpich` "
	export MPI_LIBS=" `pkg-config --libs mpich` "
	export HDF_INCLUDE=" -I /opt/hdf5/include "
	export HDF_LIBS=" -L/opt/hdf5/lib -lhdf5 -lhdf5_fortran -lhdf5_hl -lhdf5hl_fortran "
	export INCLUDES=" -I /opt/gcc/include -I /opt/mpich/include -I /opt/netcdf-c/include -I /opt/netcdf-fortran/include -I/opt/hdf5/include -fcray-pointer"
	export LIBS=" -L /opt/gcc/lib -L /opt/mpich/lib -L /opt/netcdf-c/lib -L /opt/netcdf-fortran/lib -L /opt/hdf5/lib "
	#
	# try this as well (NOTE: we need to add the $(USER_LIBS) to the primary Makefile, or hijack a different variable...
	# ./am4_from_ubuntu/usr/lib/x86_64-linux-gnu for libblas and liblapack
	export USER_LIBS=" -L/usr/lib/x86_64-linux-gnu -lblas -llapack "
	
	
	export gcc=on

%runscript
    fortune | cowsay | lolcat
    #
    
